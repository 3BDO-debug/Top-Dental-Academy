# Generated by Django 3.1.1 on 2020-09-14 12:11

import datetime
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Course_objective',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_objectives', models.CharField(max_length=350, verbose_name='Course Objectives')),
            ],
        ),
        migrations.CreateModel(
            name='Course_promo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(upload_to='', verbose_name='Course Promo Video')),
                ('video_youtube_link', models.CharField(blank=True, max_length=700, null=True, verbose_name='Youtube Optional Promo Link')),
            ],
        ),
        migrations.CreateModel(
            name='Courses_categorie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=250, verbose_name='Course Category')),
            ],
        ),
        migrations.CreateModel(
            name='Courses_Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic_name', models.CharField(default='Course Topic Name', max_length=350, verbose_name='Topic Name')),
                ('video', models.CharField(default='Lecture.mp4', max_length=3500, verbose_name='Video Name')),
            ],
        ),
        migrations.CreateModel(
            name='Courses_video_link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic_name', models.CharField(default='Course Topic Name', max_length=350, verbose_name='Topic Name')),
                ('video_youtube_link', models.CharField(max_length=500, verbose_name='Video Youtube Link')),
            ],
        ),
        migrations.CreateModel(
            name='Our_Instructor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=350, verbose_name='Instructor Name')),
                ('img', models.ImageField(upload_to='', verbose_name='Instructor Image')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.CharField(max_length=350, verbose_name='Course Name')),
                ('short_desc', models.CharField(max_length=400, verbose_name='Course Short Description (will be displayed in the main page)')),
                ('desc', models.TextField(verbose_name='Course Full Description')),
                ('course_instructor', models.CharField(max_length=350, verbose_name='Course Instructor Name')),
                ('num_of_lectures', models.IntegerField(verbose_name='Number of Course Lecture')),
                ('course_thumbnail', models.ImageField(upload_to='', verbose_name='Course Thumbnail.')),
                ('course_price', models.CharField(default='EGP 0.00', max_length=350, verbose_name='Course Price')),
                ('sale_price', models.CharField(blank=True, default='EGP 0.00', max_length=350, null=True, verbose_name='Sale Price')),
                ('created_at', models.DateTimeField(default=datetime.datetime(2020, 9, 14, 12, 11, 54, 786787, tzinfo=utc), verbose_name='Created At')),
                ('is_free', models.BooleanField(default=False, verbose_name='Free Course')),
                ('sale', models.BooleanField(default=False, verbose_name='Activate Sale')),
                ('content', models.ManyToManyField(to='Course.Courses_Video', verbose_name='Course Content')),
                ('course_objectives', models.ManyToManyField(related_name='first', to='Course.Course_objective', verbose_name='Course Objectives')),
                ('course_objectives2', models.ManyToManyField(related_name='second', to='Course.Course_objective', verbose_name='Course Objectives')),
                ('course_promo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Course.course_promo', verbose_name='Course Promo Video')),
                ('related_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Categoryrelationship', to='Course.courses_categorie')),
                ('youtube_content', models.ManyToManyField(blank=True, null=True, to='Course.Courses_video_link', verbose_name='Youtube Optional Content Upload')),
            ],
        ),
    ]
